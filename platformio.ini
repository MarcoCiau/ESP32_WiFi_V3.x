; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; Build options
;
; Build features
; - ENABLE_DEBUG - Turn on general debug options
; - ENABLE_DEBUG_WEB - Enable debug of the web server (noisy)
; - ENABLE_DEBUG_RAPI - Enable debug of the RAPI code (noisy)
; - ENABLE_PROFILE - Turn on the profiling
; - ENABLE_OTA - Enable Arduino OTA update
; - ENABLE_ASYNC_WIFI_SCAN - Enable use of the async WiFI scanning, requires Git version of ESP core
;
; Config
; - WIFI_LED - Define the pin to use for (and enable) WiFi status LED notifications
; - DEBUG_PORT - The port to use for debug messages, Serial is used for RAPI so if connected to an
;                OpenEVSE you


[platformio]
data_dir = src/data
default_envs = nofos_gateway

[common]
version = -DBUILD_TAG=3.3.2
monitor_speed = 115200
lib_deps = 
	ArduinoJson@6.15.1
	ArduinoMongoose@0.0.14
	Micro Debug@0.0.3
	ConfigJson@0.0.3
	OpenEVSE@0.0.2
	ESPAL@0.0.1
	StreamSpy@0.0.1
	MicroTasks@0.0.1
	ESP32 AnalogWrite@0.2
extra_scripts = scripts/extra_script.py
debug_flags = 
	-DENABLE_DEBUG
	-DENABLE_PROFILE
	-DDEBUG_PORT=Serial1
debug_flags_esp32 = 
	-DENABLE_DEBUG
	-ggdb
	-DENABLE_DEBUG_OPENEVSE
# -DENABLE_PROFILE
ota_flags = -DENABLE_OTA -DWIFI_LED=LED_BUILTIN
src_build_flags = 
# -DENABLE_ASYNC_WIFI_SCAN
build_flags = 
	-DCS_PLATFORM=CS_P_ESP32
	-DMG_ENABLE_SSL=1
	-DMG_ENABLE_HTTP_STREAMING_MULTIPART=1
	-DMG_SSL_MBED_DUMMY_RANDOM=1
	-DMG_SSL_IF=MG_SSL_IF_MBEDTLS
	-DMG_SSL_IF_MBEDTLS_FREE_CERTS=1
  #-DMG_SSL_IF_MBEDTLS_MAX_FRAG_LEN=2048
  #-DARDUINO_MONGOOSE_DEFAULT_STREAM_BUFFER=2048
  #-DARDUINO_MONGOOSE_SEND_BUFFER_SIZE=2048
  #-DENABLE_DEBUG
  #-DCS_ENABLE_DEBUG
  #-DMBEDTLS_DEBUG_C
	-DMG_ENABLE_SNTP=1
build_flags_esp8266 = 
	-DMG_ESP8266
	-DCS_PLATFORM=CS_P_ESP8266
build_flags_esp32 = 
	-DCS_PLATFORM=CS_P_ESP32
src_build_flags_esp32 = 
	-DENABLE_OTA
build_partitions_esp32 = min_spiffs.csv
src_build_flags_esp32_gateway = 
	-DWIFI_LED=33
	-DWIFI_LED_ON_STATE=HIGH
	-DWIFI_BUTTON=34
	-DWIFI_BUTTON_PRESSED_STATE=LOW
	-DDEBUG_PORT=Serial
	-DRAPI_PORT=Serial2
	-DENABLE_WIRED_ETHERNET
	-DRANDOM_SEED_CHANNEL=1
monitor_flags = --filter=esp8266_exception_decoder

# specify exact Arduino ESP SDK version, requires platformio 3.5+ (curently dev version)
# http://docs.platformio.org/en/latest/projectconf/section_env_general.html#platform
platform = https://github.com/platformio/platform-espressif8266.git#release/v1.6.0
platform_stage = https://github.com/platformio/platform-espressif8266.git#feature/stage
#platform_esp32 = https://github.com/platformio/platform-espressif32.git#feature/stage
#platform_esp32 = https://github.com/platformio/platform-espressif32.git#develop
platform_esp32 = espressif32@1.11.1
#platform_esp32 = espressif32

[env:nofos_gateway]
platform = ${common.platform_esp32}
board = nodemcu-32s
framework = arduino
lib_deps = 
  ${common.lib_deps}
  vshymanskyy/TinyGSM @ 0.10.9
  knolleary/PubSubClient @ 2.8
  vshymanskyy/StreamDebugger @ 1.0.1
  reaper7/SDM @ 2.1.0
  plerup/EspSoftwareSerial @ 6.11.2
src_build_flags =
  ${common.version}.dev
  ${common.src_build_flags}
  ${common.src_build_flags_esp32}
  ${common.debug_flags_esp32}
  -DWIFI_LED=2
  -DWIFI_LED_ON_STATE=LOW
  -DWIFI_BUTTON=0
  -DWIFI_BUTTON_PRESSED_STATE=LOW
  -DMODEM_PWRKEY=4
  -DMODEM_POWER_ON=23
  -DMODEM_RST=5
  -DMODEM_TX=27
  -DMODEM_RX=26
  -DLED_GPIO=15
  -DLED_ON=HIGH
  -DLED_OFF=LOW
  -DRAPI_PORT=Serial2
  -DDEBUG_PORT=Serial
  -DSIM800L_PORT=Serial1
  -DENABLE_SIM800L_MQTT
  -DSDM_DERE=25
  -DSDM_RX_RO=14
  -DSDM_TX_DI=13
  -DENABLE_SDM_METER
  -DUSE_SDM_SOFTWARE_SERIAL
build_flags =
  ${common.build_flags}
  ${common.build_flags_esp32}
#upload_port = openevse.local
upload_speed = 921600
monitor_speed = 115200
extra_scripts = ${common.extra_scripts}
board_build.partitions = ${common.build_partitions_esp32}
